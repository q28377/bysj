<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qjk.bysj.dao.RecruitMapper" >
  <resultMap id="BaseResultMap" type="com.qjk.bysj.pojo.po.Recruit" >
    <id column="rid" property="rid" jdbcType="BIGINT" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="brithday" property="brithday" jdbcType="TIMESTAMP" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="nativeplace" property="nativeplace" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="marry" property="marry" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="pay" property="pay" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="other" property="other" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rid, position, name, gender, brithday, telephone, email, education, school, nativeplace, 
    address, marry, time, pay, path, other, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qjk.bysj.pojo.po.RecruitExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recruit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from recruit
    where rid = #{rid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from recruit
    where rid = #{rid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qjk.bysj.pojo.po.RecruitExample" >
    delete from recruit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qjk.bysj.pojo.po.Recruit" >
    insert into recruit (rid, position, name, 
      gender, brithday, telephone, 
      email, education, school, 
      nativeplace, address, marry, 
      time, pay, path, 
      other, status)
    values (#{rid,jdbcType=BIGINT}, #{position,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{brithday,jdbcType=TIMESTAMP}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{nativeplace,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{marry,jdbcType=INTEGER}, 
      #{time,jdbcType=TIMESTAMP}, #{pay,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{other,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qjk.bysj.pojo.po.Recruit" >
    insert into recruit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        rid,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="brithday != null" >
        brithday,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="nativeplace != null" >
        nativeplace,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="marry != null" >
        marry,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="pay != null" >
        pay,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rid != null" >
        #{rid,jdbcType=BIGINT},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="brithday != null" >
        #{brithday,jdbcType=TIMESTAMP},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="nativeplace != null" >
        #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="marry != null" >
        #{marry,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="pay != null" >
        #{pay,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qjk.bysj.pojo.po.RecruitExample" resultType="java.lang.Integer" >
    select count(*) from recruit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update recruit
    <set >
      <if test="record.rid != null" >
        rid = #{record.rid,jdbcType=BIGINT},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.brithday != null" >
        brithday = #{record.brithday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null" >
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.nativeplace != null" >
        nativeplace = #{record.nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.marry != null" >
        marry = #{record.marry,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pay != null" >
        pay = #{record.pay,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.other != null" >
        other = #{record.other,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update recruit
    set rid = #{record.rid,jdbcType=BIGINT},
      position = #{record.position,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      brithday = #{record.brithday,jdbcType=TIMESTAMP},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      nativeplace = #{record.nativeplace,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      marry = #{record.marry,jdbcType=INTEGER},
      time = #{record.time,jdbcType=TIMESTAMP},
      pay = #{record.pay,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      other = #{record.other,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qjk.bysj.pojo.po.Recruit" >
    update recruit
    <set >
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="brithday != null" >
        brithday = #{brithday,jdbcType=TIMESTAMP},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="nativeplace != null" >
        nativeplace = #{nativeplace,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="marry != null" >
        marry = #{marry,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="pay != null" >
        pay = #{pay,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where rid = #{rid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qjk.bysj.pojo.po.Recruit" >
    update recruit
    set position = #{position,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      brithday = #{brithday,jdbcType=TIMESTAMP},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      nativeplace = #{nativeplace,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      marry = #{marry,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      pay = #{pay,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      other = #{other,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where rid = #{rid,jdbcType=BIGINT}
  </update>
</mapper>